{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/guards/auth.guard.ts","./src/app/layout/auth/auth.component.ts","./src/app/layout/auth/auth.component.html","./src/app/layout/members/members.component.ts","./src/app/layout/members/members.component.html","./src/app/layout/sidebar/sidebar.component.ts","./src/app/layout/sidebar/sidebar.component.html","./src/app/pages/alien-dashboard/alien-dashboard.component.ts","./src/app/pages/alien-dashboard/alien-dashboard.component.html","./src/app/pages/alien-dashboard/alien-list/alien-list.component.ts","./src/app/pages/alien-dashboard/alien-list/alien-list.component.html","./src/app/pages/alien-portal/alien-portal.component.ts","./src/app/pages/alien-portal/alien-portal.component.html","./src/app/pages/auth/sign-in/sign-in.component.ts","./src/app/pages/auth/sign-in/sign-in.component.html","./src/app/pages/create-alien/create-alien.component.ts","./src/app/pages/create-alien/create-alien.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/readme/readme.component.ts","./src/app/pages/readme/readme.component.html","./src/app/pipes/titlecase.pipe.ts","./src/app/services/alien.service.ts","./src/app/services/user.service.ts","./src/app/sidebar/nav-menu/nav-menu.component.ts","./src/app/sidebar/nav-menu/nav-menu.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MembersComponent } from './layout/members/members.component';\r\nimport { AuthComponent } from './layout/auth/auth.component';\r\nimport { SignInComponent } from './pages/auth/sign-in/sign-in.component';\r\nimport { AlienDashboardComponent } from './pages/alien-dashboard/alien-dashboard.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { CreateAlienComponent } from './pages/create-alien/create-alien.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { ReadmeComponent } from './pages/readme/readme.component';\r\nimport { AlienPortalComponent } from './pages/alien-portal/alien-portal.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: AuthComponent,\r\n    data: { title: \"Authentication\" },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        component: SignInComponent,\r\n        data: { title: \"Sign In\" }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: \"members\",\r\n    component: MembersComponent,\r\n    canActivateChild: [ AuthGuard ],\r\n    data: { title: \"Member Area\" },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        component: HomeComponent,\r\n        data: { title: \"Home\" }\r\n      },\r\n      {\r\n        path: \"aliens/:id\",\r\n        component: AlienPortalComponent,\r\n        data: { title: \"Alien Closer Look\" }\r\n      },\r\n      {\r\n        path: \"dashboard\",\r\n        component: AlienDashboardComponent,\r\n        data: { title: \"Dashboard\" }\r\n      },\r\n      {\r\n        path: \"create\",\r\n        component: CreateAlienComponent,\r\n        data: { title: \"Create Alien\" }\r\n      },\r\n      {\r\n        path: \"readme\",\r\n        component: ReadmeComponent,\r\n        data: { title: \"Readme\" }\r\n      }\r\n    ]\r\n  },\r\n \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    {\r\n      provide: AuthGuard,\r\n    } \r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { filter, map, mergeMap } from 'rxjs/operators';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  theme = \"light\";\n  constructor(private router: Router, private titleService: Title, private route: ActivatedRoute) { };\n  ngOnInit(): void {\n    //This code is subscribed to all route events\n    this.router.events\n      .pipe(\n        //only interested in end of navigation\n        filter(event => event instanceof NavigationEnd),\n        map(() => this.route),\n        map((route) => {\n          while (route.firstChild) route = route.firstChild;\n          return route;\n        }),\n        filter(route => route.outlet == 'primary'),\n        //data specified in app-routing module\n        mergeMap(route => route.data)\n      )\n      .subscribe((event) => {\n        //pushing router event to google analytics\n        //sets title!\n        this.titleService.setTitle(`${event.title} - Alien Invasion`);\n        //checks for token expiry!\n        //  if (event.tokenized) {\n        //    this.auth.expireToken(this.storage.token);\n        //  }\n\n      });\n  }\n\n}\n","<!--\n  This div can be used to set global themes and styles for the app.\n-->\n<div>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MembersComponent } from './layout/members/members.component';\r\nimport { AuthComponent } from './layout/auth/auth.component';\r\nimport { SidebarComponent } from './layout/sidebar/sidebar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavMenuComponent } from './sidebar/nav-menu/nav-menu.component';\r\nimport { SignInComponent } from './pages/auth/sign-in/sign-in.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AlienListComponent } from './pages/alien-dashboard/alien-list/alien-list.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UserService } from './services/user.service';\r\nimport { AlienService } from './services/alien.service';\r\nimport { AlienDashboardComponent } from './pages/alien-dashboard/alien-dashboard.component';\r\nimport { TitlecasePipe } from './pipes/titlecase.pipe';\r\nimport { CreateAlienComponent } from './pages/create-alien/create-alien.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { ReadmeComponent } from './pages/readme/readme.component';\r\nimport { AlienPortalComponent } from './pages/alien-portal/alien-portal.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MembersComponent,\r\n    AuthComponent,\r\n    SidebarComponent,\r\n    NavMenuComponent,\r\n    SignInComponent,\r\n    AlienListComponent,\r\n    AlienDashboardComponent,\r\n    TitlecasePipe,\r\n    CreateAlienComponent,\r\n    HomeComponent,\r\n    ReadmeComponent,\r\n    AlienPortalComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireAuthModule,\r\n    MatSidenavModule,\r\n  ],\r\n  providers: [ UserService, AlienService, { provide: Window, useValue: window } ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivateChild, UrlSegmentGroup, UrlSegment, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n  constructor(private router: Router, private userService: UserService) { }\n  async canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean | UrlTree> {\n    return true;\n    // return await this.validateAuth();\n  }\n  async canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Promise<boolean | UrlTree> {\n    return await this.validateAuth();\n  }\n  private async validateAuth() {\n    let user = await this.userService.getUser();\n    if (!user) {\n      return this.router.parseUrl('');\n    }\n    return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  \n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"auth\">\n    <router-outlet></router-outlet>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-members',\n  templateUrl: './members.component.html',\n  styleUrls: ['./members.component.scss']\n})\nexport class MembersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<sidebar>\n</sidebar>\n","import { Component, OnInit } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor(public window: Window, registry: MatIconRegistry, sanitizer: DomSanitizer) {\n    registry.addSvgIcon(\"hamburger\",\n    sanitizer.bypassSecurityTrustResourceUrl('../../../assets/hamburger.svg'));\n  }\n  isMobile() {\n    return this.window.innerWidth <= 767;\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<mat-drawer-container #sidenav [hasBackdrop]=\"isMobile()\" autosize class=\" sidebar\">\n        <mat-drawer #drawer mode=\"side\" \n        class=\"sidebar__drawer mat-elevation-z8\"  [opened]=\"!isMobile()\" >\n        <img class=\"sidebar__drawer__logo logo\" \n        src=\"../../../assets/logo.png\" alt=\"\" srcset=\"\">\n        <div class=\"mt-5\">\n            <nav-menu></nav-menu>\n        </div>\n        </mat-drawer>\n        <mat-drawer-content class=\"alien-light sidebar__content\">\n            &nbsp;<button *ngIf=\"isMobile()\" class=\"button--icon icon\" (click)=\"drawer.toggle()\" >\n            <mat-icon svgIcon=\"hamburger\"></mat-icon>    \n            </button>\n                <router-outlet></router-outlet>\n            </mat-drawer-content>\n</mat-drawer-container>","import { Component, OnInit } from '@angular/core';\nimport { AlienService } from 'src/app/services/alien.service';\n\n@Component({\n  selector: 'app-alien-dashboard',\n  templateUrl: './alien-dashboard.component.html',\n  styleUrls: ['./alien-dashboard.component.scss']\n})\nexport class AlienDashboardComponent implements OnInit {\n  \n\n  aliens;\n\n  constructor(private alienService: AlienService) { }\n  ngOnInit(): void {\n    this.alienService.getAliens().subscribe(res => {\n      this.aliens = res;\n      console.log(this.aliens);\n    });\n  }\n  getCol (type) {\n    return this.alienService.getListColumns(type);\n  }\n}\n","<section *ngIf=\"aliens\">\n    <div class=\"mb-5 mt-5 text-center\">\n        <alien-list l-title=\"Alien Chief Commanders\" [items]=\"aliens['Commander Chief']\" [columns]=\"getCol('chief commander')\"></alien-list>\n    </div>\n    <div class=\"mb-5 mt-5\">\n        <alien-list l-title=\"Alien Commanders\" [items]=\"aliens.Commander\" [columns]=\"getCol('commander')\"></alien-list>\n    </div>\n    <div class=\"mt-5\">\n        <alien-list l-title=\"Alien Warriors\" [items]=\"aliens.Warrior\" [columns]=\"getCol('warrior')\"></alien-list>\n    </div>\n</section>","import { Component, OnInit, Input } from '@angular/core';\nimport { AlienService } from 'src/app/services/alien.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'alien-list',\n  templateUrl: './alien-list.component.html',\n  styleUrls: ['./alien-list.component.scss']\n})\nexport class AlienListComponent implements OnInit {\n  @Input('items') items;\n  @Input('l-title') title;\n  @Input('columns') columns;\n  constructor(private router: Router) {}\n  ngOnInit(): void {\n\n  }\n\n  navigateTo(alien) {\n    this.router.navigate([\"members\", \"aliens\", alien._id], { state: { data: alien } });\n  }\n\n}\n","<div class=\"alien-list__wrapper\">\n    <h3 class=\"heading-secondary alien-list__title\">\n        {{title}}\n    </h3>\n    <table mat-table [dataSource]=\"items\" class=\"alien-list mat-elevation-z8\"> \n        <ng-container class=\"alien-list__row\" *ngFor=\"let col of columns\"\n        [matColumnDef]=\"col\">\n            <th class=\"alien-list__header\" mat-header-cell *matHeaderCellDef>\n                 {{ col | custom_titlecase }} </th>\n            <td class=\"alien-list__cell\" mat-cell *matCellDef=\"let data\"> <a (click)=\"navigateTo(data)\"> {{ data[col] }} </a> </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\n    </table>\n</div>\n    ","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlienService } from 'src/app/services/alien.service';\n\n@Component({\n  selector: 'app-alien-portal',\n  templateUrl: './alien-portal.component.html',\n  styleUrls: ['./alien-portal.component.scss']\n})\nexport class AlienPortalComponent implements OnInit {\n  alien;\n  id;\n  children;\n  propKeys: string[];\n\n  constructor(private router: Router, private route: ActivatedRoute, private alienService: AlienService) {\n    this.id = this.route.snapshot.params['id'];\n    console.log(this.id);\n    this.loadCurrentAlien();\n    this.loadChildren();\n  }\n  private set Alien (value) {\n    this.alien = value;\n    this.propKeys = Object.keys(value);\n  }\n  loadCurrentAlien() {\n    let navData = this.router.getCurrentNavigation() && this.router.getCurrentNavigation().extras; \n    if (navData && navData.state && navData.state.data) {\n      this.Alien = navData.state.data;\n    } else {\n      this.alienService.getBy('id', this.id).subscribe(alien => {\n       this.Alien = alien;\n      })\n    }\n   }\n   loadChildren() {\n    this.alienService.getBy('parent', this.id).subscribe(children => {\n      if(children && children['length'] > 0) {\n        this.children = children;\n      }\n      console.log(this.children);\n    })\n  }\n  getColumns(type) {\n    type = type.toLowerCase();\n      let colType = type === \"commander\" ? \"warrior\" : \"commander\";\n      return this.alienService.getListColumns(colType);\n    }\n  ngOnInit(): void {\n  }\n\n}\n","<section *ngIf=\"alien\" class=\"portal\">\n    <h2 class=\" mb-5 text-center\"> Magnifying glass for alien {{ alien.name }} </h2>\n    <br>\n    <p *ngFor=\"let prop of propKeys\">\n        {{ prop | custom_titlecase }}: {{ alien[prop] }}\n    </p>\n    <alien-list l-title=\"Servants of {{alien.name}}\" \n    *ngIf=\"children; else noChildren\" [columns]=\"getColumns(alien.type)\" [items]=\"children\">\n    </alien-list>\n    <ng-template #noChildren>\n        <span style=\"font-weight: bold;\"> This alien does not have any servants.\n        </span>\n    </ng-template>\n    <br>\n    <button routerLink=\"/members/dashboard\" class=\"button--icon\"> &#x2190;  </button>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n  constructor(private router: Router, private route: ActivatedRoute, private userService: UserService) { }\n  authenticate() {\n      this.userService.loginWithGoogle().then(() => {\n        this.router.navigate(['members'], { relativeTo: this.route })\n      })\n  }\n  ngOnInit(): void {\n  }\n\n}\n","\n        <h2 class=\"auth__authentication__title\">\n            Identify yourself, soldier\n        </h2>\n        <br>\n        <button (click)=\"authenticate()\" class=\"button\"> Authenticate </button>","import { Component, OnInit } from '@angular/core';\nimport { AlienService } from 'src/app/services/alien.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-alien',\n  templateUrl: './create-alien.component.html',\n  styleUrls: ['./create-alien.component.scss']\n})\nexport class CreateAlienComponent implements OnInit {\n  \n  //weapons, vehicles, cards & types are hardcoded per project specifications, though for a more maintainable \n  //project they would be prime candidates to be grabbed as schema from a database.\n  weapons = ['Water gun', 'Pepper spray', 'Chopsticks'];\n  membership_cards = ['Shufersal', 'Hever', 'Hitech zone'];\n  vehicles = ['Bird scooter', 'Merkava tank'];\n  alienTypes = ['Warrior', 'Commander', 'Commander Chief'];\n  parentDictionary = {\n    \"Warrior\": 'Commander',\n    \"Commander\": 'Commander Chief',\n    \"Commander Chief\": null\n  }\n  //Default value - this property is two-way bound to the form \"type\" property, and will alter the form based on its' state.\n  type = \"Warrior\";\n  aliens: any;\n  public set Type(value) {\n    console.log(this.type);\n    this.type = value;\n  }\n  constructor(private alienService: AlienService, private router: Router) {\n    alienService.getAliens().subscribe(res => {\n      this.aliens = res;\n    })\n  }\n  getParent(type) {\n    return this.parentDictionary[type];\n  }\n\n  create (alien) {\n    this.alienService.createAlien(alien).subscribe(result => {\n      this.router.navigate([\"members\", \"dashboard\"]);\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"form__wrapper\">\n    <h2 class=\"form__heading\">\n        Create Alien\n    </h2>\n    <p class=\"form__p\">\n        Use the form interface to generate additional aliens. <br>The alien type being the most important property - as\n        it alters\n        the other properties of the form.\n    </p>\n    <form #f=\"ngForm\" class=\"form\" (ngSubmit)=\"create(f.value)\">\n        <div class=\"row\">\n            <div class=\"col-md-5\">\n                <mat-form-field class=\"form__field\">\n                    <mat-label>Name</mat-label>\n                    <input required matInput ngModel name=\"name\" placeholder=\"Ex. Plutonius Maximus\">\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <mat-label>Alien Type</mat-label>\n                    <mat-select required [(ngModel)]=\"type\" name=\"type\">\n                        <mat-option *ngFor=\"let a of alienTypes\" [value]=\"a\">\n                            {{ a | titlecase }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row\" *ngIf=\"f.value.type === 'Commander'\">\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <mat-label>Vehicle</mat-label>\n                    <mat-select required ngModel name=\"vehicle\">\n                        <mat-option *ngFor=\"let v of vehicles\" [value]=\"v\">\n                            {{ v | titlecase }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row\" *ngIf=\"f.value.type === 'Warrior'\">\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <mat-label>Weapon</mat-label>\n                    <mat-select required ngModel name=\"weapon\">\n                        <mat-option *ngFor=\"let w of weapons\" [value]=\"w\">\n                            {{ w | titlecase }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row\" *ngIf=\"f.value.type === 'Commander Chief'\">\n            <div class=\"col-md-5\">\n                <mat-form-field>\n                    <mat-label>Vehicle</mat-label>\n                    <mat-select required ngModel name=\"vehicle\">\n                        <mat-option *ngFor=\"let v of vehicles\" [value]=\"v\">\n                            {{ v | titlecase }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <mat-label>Membership Card</mat-label>\n                    <mat-select required ngModel name=\"membership_card\">\n                        <mat-option *ngFor=\"let mc of membership_cards\" [value]=\"mc\">\n                            {{ mc | titlecase }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row\" *ngIf=\"aliens && f.value.type !== 'Commander Chief'\">\n            <div class=\"col-md-5\">\n                <mat-form-field>\n                    <mat-label>Serves Under</mat-label>\n                    <mat-select required ngModel name=\"parent\">\n                        <mat-option *ngFor=\"let a of aliens[getParent(f.value.type)]\" [value]=\"a._id\">\n                            {{ a.name | titlecase }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"text-center mt-5\">\n            <button [disabled]=\"f.invalid\" class=\"button button--primary\">Create</button>\n        </div>\n    </form>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"home\">\n    <h1 class=\"home__heading heading-primary heading-primary--main\">\n        Alien Invasion\n    </h1>\n    <div class=\"home__img__wrapper\">\n        <img class=\"home__img\" src=\"../../../assets/alien-dude.png\" alt=\"\" srcset=\"\">\n    </div>\n\n    <p class=\"home__p\"> PS: All images in this project have been ruthlessly stolen from google images.</p>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-readme',\n  templateUrl: './readme.component.html',\n  styleUrls: ['./readme.component.scss']\n})\nexport class ReadmeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"readme\">\n\n    <h2 class=\"heading-secondary\">\n        readme\n    </h2>\n    <p>\n        Welcome to the official readme for the ALIEN INVASION project!\n    </p>\n    <p>\n        This project was created by Oren Carmel as an Avantis job appliance home assignment.\n    </p>\n    <p><b>\n            Run Instructions:\n        </b></p>\n    <p>\n        Start the server: npm start\n    </p>\n    <p>\n        Build the project:\n        frontend dist; ng serve\n        followed by npm build.\n    </p>\n    <br>\n    <h3>Front End</h3>\n    <p>\n        Front end contained within the alien-invasion-fe (frontend) folder. Traditional Angular folder structure;\n    </p>\n    <p>\n        src/app/guards for routing guards (functions that will trigger on specified routing events)\n    </p>\n    <p>\n        src/app/pages for page specific components\n    </p>\n    <p>\n        src/app/layout for general layout wrappers.\n    </p>\n    <p>\n        src/app/services; classes acting as state managers, transfering data, handling logic and API requests.\n    </p>\n    <p>\n        src/app/app.component; project root.\n    </p>\n    <br>\n    <h3>Back End</h3>\n    <p>\n        /bootstrap; all files first loaded on server start. contains integral dependencies such as express, database connection, API configuration etc.\n    </p>\n    <p>\n        /controllers: API application logic. contains routes and business methods, mostly fetching & creating data.\n    </p>\n    <p>\n        /db: Data access layer. partially redundant when using Mongo but a good habit in my honest opinion. \n    </p>\n    <p>\n        /models: Data models & schemas describing the structure of the application.\n    </p>\n    <p>\n        /scripts: Single use scripts for specified use-cases such as clearing & populating tables.\n    </p>\n    <h3>API</h3>\n    <p><b>Routes:</b></p>\n    <p>\n        /api/aliens: POST -- create an alien\n    </p>\n    <p>\n        /api/aliens: GET - get all aliens - returns a hashmap of arrays, with the keys being alien type.\n    </p>\n    <p>\n        /api/aliens/:param?param=[param] - Get aliens by a param specified in query (defaults to ID).\n        Accepts: type, parent, id.\n    </p>\n\n    <h3>Known issues:</h3>\n    <p>\n        Due to time limitations, some elements had to be 'skimmed':\n    </p>\n    <p>\n        Google authentication is limited to until page refresh. User will have to re-authenticate on refresh. <br>\n        Unfortunately, did not have enough time to implement token validation expiration, refresh, etc.\n    </p>\n    <p>\n        Authentication is not currently validated on server side. With firebase being our authentication platform,\n        we would have to install a Firebase admin API for auth validation.\n    </p>\n    <p>\n        Lack of input validation. Given more time, to scale this app further we would need to validate fields before inserting them to the database.\n        <br> That could be achieved using Joi, another library or implementing custom field validation.\n    </p>\n</section>","import { Pipe, PipeTransform } from '@angular/core';\n/**\n * Angular has a custom built in titlecase but I'm not a fan of the implementation - we'll make a new 'custom' titlecase pipe.\n */\n@Pipe({\n  name: 'custom_titlecase'\n})\nexport class TitlecasePipe implements PipeTransform {\n  prepositions = [\n    'of', 'the', 'is', 'on', 'in', 'at', 'for'\n  ]\n  transform(value: any): any {\n    if (!value) return null;\n    if (typeof value != 'string') return value;\n    value = value.replace(/_/g, ' ').replace(/-/g, ' ');\n    let words = value.split(' ');\n    return words.map((word, i) => {\n      if (i > 0 && this.isPreposition(word)) {\n        return word.toLowerCase();\n      }\n      return this.toTitleCase(word);\n    }).join(' ');\n  }\n  toTitleCase(word: string): string {\n    return word.substr(0, 1).toUpperCase() + word.substr(1).toLowerCase();\n  }\n  isPreposition(word: string) {\n    return this.prepositions.includes(word.toLowerCase());\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlienService {\n  columns = {\n    \"chief commander\": ['name', 'vehicle', 'membership_card'],\n    \"warrior\": ['name', 'weapon'],\n    \"commander\": ['name', 'vehicle'],\n  }\n\n  url = `${ environment.base_url }/aliens`\n  constructor(private http: HttpClient) { }\n  createAlien (alien) {\n    return this.http.post(this.url, alien);\n  }\n  getAliens() {\n    return this.http.get(this.url);\n  }\n  getBy(param, value) {\n    return this.http.get(`${this.url}/${value}?param=${param}`);\n  }\n  getListColumns(type) {\n    console.log(type);\n    return this.columns[type.toLowerCase()];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { auth } from 'firebase';\nimport { map } from 'rxjs/operators';\n/**\n * For smaller apps, I prefer to use Firebase to handle\n * authentication and token validation for me. \n * This way, we can delegate responsibility of \n * token management and easily implement social \n * signups on client side, no fuss.\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private userProfile;\n  private user$;\n  constructor(private fAuth: AngularFireAuth) {\n    this.user$ = this.fAuth.user;\n    this.fAuth.onAuthStateChanged(observer => {\n      if (!observer) {\n        this.user$ = null;\n        return;\n      }\n      this.userProfile = {\n        name: observer.displayName,\n        email: observer.email\n      }\n      this.user$ = observer;\n    });\n  }\n  public async loginWithGoogle() {\n    let provider = new auth.GoogleAuthProvider();\n    let result = await this.fAuth.signInWithPopup(provider);\n  }\n  getUser() {\n    return this.fAuth.currentUser;\n  }\n\n  get Profile() {\n    return this.userProfile;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.scss']\n})\nexport class NavMenuComponent implements OnInit {\n  routes = [\n    {\n      path: \"/members/create\",\n      text: \"Create Aliens\"\n    },\n    {\n      path: \"/members/dashboard\",\n      text: \"Alien Dashboard\"\n    },\n    {\n      path: \"/members/readme\",\n      text: \"Readme\"\n    }\n  ]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav>\n    <ul>\n        <li class=\"route__item\" *ngFor=\"let route of routes\">\n            <a class=\"route\" routerLinkActive=\"route--active\" [routerLink]=\"route.path\">\n                {{ route.text }}\n            </a>\n        </li>\n    </ul>\n</nav>","export const environment = {\n  production: false,\n  base_url: \"http://localhost:3001/api\",\n  firebase: {\n    apiKey: \"AIzaSyAAfFFVC5_T89uXYmlo_GYZDBrDf6PEmgE\",\n    authDomain: \"avantis-aliens-1582893866161.firebaseapp.com\",\n    databaseURL: \"https://avantis-aliens-1582893866161.firebaseio.com\",\n    projectId: \"avantis-aliens-1582893866161\",\n    storageBucket: \"avantis-aliens-1582893866161.appspot.com\",\n    messagingSenderId: \"1081614218287\",\n    appId: \"1:1081614218287:web:3728194a1ee9a18bd082da\"\n  },\n  google_id: '1081614218287-1asqnjvluj92j4r9r07anfkbngip4sb9.apps.googleusercontent.com'\n};\nimport 'zone.js/dist/zone-error';\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}