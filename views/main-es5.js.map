{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/layout/auth/auth.component.ts","webpack:///src/app/layout/auth/auth.component.html","webpack:///src/app/layout/members/members.component.ts","webpack:///src/app/layout/members/members.component.html","webpack:///src/app/layout/sidebar/sidebar.component.ts","webpack:///src/app/layout/sidebar/sidebar.component.html","webpack:///src/app/pages/alien-dashboard/alien-dashboard.component.ts","webpack:///src/app/pages/alien-dashboard/alien-dashboard.component.html","webpack:///src/app/pages/alien-dashboard/alien-list/alien-list.component.ts","webpack:///src/app/pages/alien-dashboard/alien-list/alien-list.component.html","webpack:///src/app/pages/alien-portal/alien-portal.component.ts","webpack:///src/app/pages/alien-portal/alien-portal.component.html","webpack:///src/app/pages/auth/sign-in/sign-in.component.ts","webpack:///src/app/pages/auth/sign-in/sign-in.component.html","webpack:///src/app/pages/create-alien/create-alien.component.ts","webpack:///src/app/pages/create-alien/create-alien.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/readme/readme.component.ts","webpack:///src/app/pages/readme/readme.component.html","webpack:///src/app/pipes/titlecase.pipe.ts","webpack:///src/app/services/alien.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/sidebar/nav-menu/nav-menu.component.ts","webpack:///src/app/sidebar/nav-menu/nav-menu.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","data","title","children","canActivateChild","AppRoutingModule","provide","forRoot","imports","providers","AppComponent","router","titleService","route","theme","events","pipe","event","firstChild","outlet","subscribe","setTitle","selector","templateUrl","styleUrls","AppModule","Window","useValue","window","initializeApp","firebase","declarations","bootstrap","AuthGuard","userService","childRoute","state","next","validateAuth","getUser","user","parseUrl","providedIn","AuthComponent","MembersComponent","SidebarComponent","registry","sanitizer","addSvgIcon","bypassSecurityTrustResourceUrl","innerWidth","AlienDashboardComponent","alienService","getAliens","res","aliens","console","log","type","getListColumns","AlienListComponent","alien","navigate","_id","AlienPortalComponent","snapshot","params","loadCurrentAlien","loadChildren","navData","getCurrentNavigation","extras","Alien","getBy","toLowerCase","colType","value","propKeys","Object","SignInComponent","loginWithGoogle","relativeTo","authenticate","CreateAlienComponent","weapons","membership_cards","vehicles","alienTypes","parentDictionary","createAlien","result","create","HomeComponent","ReadmeComponent","TitlecasePipe","prepositions","replace","words","split","map","word","i","isPreposition","toTitleCase","join","substr","toUpperCase","includes","name","AlienService","http","columns","url","base_url","post","get","param","UserService","fAuth","user$","onAuthStateChanged","observer","userProfile","displayName","email","provider","GoogleAuthProvider","signInWithPopup","currentUser","NavMenuComponent","text","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","google_id","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MembersComponent } from './layout/members/members.component';\r\nimport { AuthComponent } from './layout/auth/auth.component';\r\nimport { SignInComponent } from './pages/auth/sign-in/sign-in.component';\r\nimport { AlienDashboardComponent } from './pages/alien-dashboard/alien-dashboard.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { CreateAlienComponent } from './pages/create-alien/create-alien.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { ReadmeComponent } from './pages/readme/readme.component';\r\nimport { AlienPortalComponent } from './pages/alien-portal/alien-portal.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: AuthComponent,\r\n    data: { title: \"Authentication\" },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        component: SignInComponent,\r\n        data: { title: \"Sign In\" }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: \"members\",\r\n    component: MembersComponent,\r\n    canActivateChild: [ AuthGuard ],\r\n    data: { title: \"Member Area\" },\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        component: HomeComponent,\r\n        data: { title: \"Home\" }\r\n      },\r\n      {\r\n        path: \"aliens/:id\",\r\n        component: AlienPortalComponent,\r\n        data: { title: \"Alien Closer Look\" }\r\n      },\r\n      {\r\n        path: \"dashboard\",\r\n        component: AlienDashboardComponent,\r\n        data: { title: \"Dashboard\" }\r\n      },\r\n      {\r\n        path: \"create\",\r\n        component: CreateAlienComponent,\r\n        data: { title: \"Create Alien\" }\r\n      },\r\n      {\r\n        path: \"readme\",\r\n        component: ReadmeComponent,\r\n        data: { title: \"Readme\" }\r\n      }\r\n    ]\r\n  },\r\n \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    {\r\n      provide: AuthGuard,\r\n    } \r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { filter, map, mergeMap } from 'rxjs/operators';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  theme = \"light\";\n  constructor(private router: Router, private titleService: Title, private route: ActivatedRoute) { };\n  ngOnInit(): void {\n    //This code is subscribed to all route events\n    this.router.events\n      .pipe(\n        //only interested in end of navigation\n        filter(event => event instanceof NavigationEnd),\n        map(() => this.route),\n        map((route) => {\n          while (route.firstChild) route = route.firstChild;\n          return route;\n        }),\n        filter(route => route.outlet == 'primary'),\n        //data specified in app-routing module\n        mergeMap(route => route.data)\n      )\n      .subscribe((event) => {\n        //pushing router event to google analytics\n        //sets title!\n        this.titleService.setTitle(`${event.title} - Alien Invasion`);\n        //checks for token expiry!\n        //  if (event.tokenized) {\n        //    this.auth.expireToken(this.storage.token);\n        //  }\n\n      });\n  }\n\n}\n","<!--\n  This div can be used to set global themes and styles for the app.\n-->\n<div>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MembersComponent } from './layout/members/members.component';\r\nimport { AuthComponent } from './layout/auth/auth.component';\r\nimport { SidebarComponent } from './layout/sidebar/sidebar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavMenuComponent } from './sidebar/nav-menu/nav-menu.component';\r\nimport { SignInComponent } from './pages/auth/sign-in/sign-in.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AlienListComponent } from './pages/alien-dashboard/alien-list/alien-list.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UserService } from './services/user.service';\r\nimport { AlienService } from './services/alien.service';\r\nimport { AlienDashboardComponent } from './pages/alien-dashboard/alien-dashboard.component';\r\nimport { TitlecasePipe } from './pipes/titlecase.pipe';\r\nimport { CreateAlienComponent } from './pages/create-alien/create-alien.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { ReadmeComponent } from './pages/readme/readme.component';\r\nimport { AlienPortalComponent } from './pages/alien-portal/alien-portal.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MembersComponent,\r\n    AuthComponent,\r\n    SidebarComponent,\r\n    NavMenuComponent,\r\n    SignInComponent,\r\n    AlienListComponent,\r\n    AlienDashboardComponent,\r\n    TitlecasePipe,\r\n    CreateAlienComponent,\r\n    HomeComponent,\r\n    ReadmeComponent,\r\n    AlienPortalComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireAuthModule,\r\n    MatSidenavModule,\r\n  ],\r\n  providers: [ UserService, AlienService, { provide: Window, useValue: window } ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivateChild, UrlSegmentGroup, UrlSegment, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n  constructor(private router: Router, private userService: UserService) { }\n  async canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean | UrlTree> {\n    return true;\n    // return await this.validateAuth();\n  }\n  async canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Promise<boolean | UrlTree> {\n    return await this.validateAuth();\n  }\n  private async validateAuth() {\n    let user = await this.userService.getUser();\n    if (!user) {\n      return this.router.parseUrl('');\n    }\n    return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  \n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"auth\">\n    <router-outlet></router-outlet>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-members',\n  templateUrl: './members.component.html',\n  styleUrls: ['./members.component.scss']\n})\nexport class MembersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<sidebar>\n</sidebar>\n","import { Component, OnInit } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor(public window: Window, registry: MatIconRegistry, sanitizer: DomSanitizer) {\n    registry.addSvgIcon(\"hamburger\",\n    sanitizer.bypassSecurityTrustResourceUrl('../../../assets/hamburger.svg'));\n  }\n  isMobile() {\n    return this.window.innerWidth <= 767;\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<mat-drawer-container #sidenav [hasBackdrop]=\"isMobile()\" autosize class=\" sidebar\">\n        <mat-drawer #drawer mode=\"side\" \n        class=\"sidebar__drawer mat-elevation-z8\"  [opened]=\"!isMobile()\" >\n        <img class=\"sidebar__drawer__logo logo\" \n        src=\"../../../assets/logo.png\" alt=\"\" srcset=\"\">\n        <div class=\"mt-5\">\n            <nav-menu></nav-menu>\n        </div>\n        </mat-drawer>\n        <mat-drawer-content class=\"alien-light sidebar__content\">\n            &nbsp;<button *ngIf=\"isMobile()\" class=\"button--icon icon\" (click)=\"drawer.toggle()\" >\n            <mat-icon svgIcon=\"hamburger\"></mat-icon>    \n            </button>\n                <router-outlet></router-outlet>\n            </mat-drawer-content>\n</mat-drawer-container>","import { Component, OnInit } from '@angular/core';\nimport { AlienService } from 'src/app/services/alien.service';\n\n@Component({\n  selector: 'app-alien-dashboard',\n  templateUrl: './alien-dashboard.component.html',\n  styleUrls: ['./alien-dashboard.component.scss']\n})\nexport class AlienDashboardComponent implements OnInit {\n  \n\n  aliens;\n\n  constructor(private alienService: AlienService) { }\n  ngOnInit(): void {\n    this.alienService.getAliens().subscribe(res => {\n      this.aliens = res;\n      console.log(this.aliens);\n    });\n  }\n  getCol (type) {\n    return this.alienService.getListColumns(type);\n  }\n}\n","<section *ngIf=\"aliens\">\n    <div class=\"mb-5 mt-5 text-center\">\n        <alien-list l-title=\"Alien Chief Commanders\" [items]=\"aliens['Commander Chief']\" [columns]=\"getCol('chief commander')\"></alien-list>\n    </div>\n    <div class=\"mb-5 mt-5\">\n        <alien-list l-title=\"Alien Commanders\" [items]=\"aliens.Commander\" [columns]=\"getCol('commander')\"></alien-list>\n    </div>\n    <div class=\"mt-5\">\n        <alien-list l-title=\"Alien Warriors\" [items]=\"aliens.Warrior\" [columns]=\"getCol('warrior')\"></alien-list>\n    </div>\n</section>","import { Component, OnInit, Input } from '@angular/core';\nimport { AlienService } from 'src/app/services/alien.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'alien-list',\n  templateUrl: './alien-list.component.html',\n  styleUrls: ['./alien-list.component.scss']\n})\nexport class AlienListComponent implements OnInit {\n  @Input('items') items;\n  @Input('l-title') title;\n  @Input('columns') columns;\n  constructor(private router: Router) {}\n  ngOnInit(): void {\n\n  }\n\n  navigateTo(alien) {\n    this.router.navigate([\"members\", \"aliens\", alien._id], { state: { data: alien } });\n  }\n\n}\n","<div class=\"alien-list__wrapper\">\n    <h3 class=\"heading-secondary alien-list__title\">\n        {{title}}\n    </h3>\n    <table mat-table [dataSource]=\"items\" class=\"alien-list mat-elevation-z8\"> \n        <ng-container class=\"alien-list__row\" *ngFor=\"let col of columns\"\n        [matColumnDef]=\"col\">\n            <th class=\"alien-list__header\" mat-header-cell *matHeaderCellDef>\n                 {{ col | custom_titlecase }} </th>\n            <td class=\"alien-list__cell\" mat-cell *matCellDef=\"let data\"> <a (click)=\"navigateTo(data)\"> {{ data[col] }} </a> </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\n    </table>\n</div>\n    ","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlienService } from 'src/app/services/alien.service';\n\n@Component({\n  selector: 'app-alien-portal',\n  templateUrl: './alien-portal.component.html',\n  styleUrls: ['./alien-portal.component.scss']\n})\nexport class AlienPortalComponent implements OnInit {\n  alien;\n  id;\n  children;\n  propKeys: string[];\n\n  constructor(private router: Router, private route: ActivatedRoute, private alienService: AlienService) {\n    this.id = this.route.snapshot.params['id'];\n    console.log(this.id);\n    this.loadCurrentAlien();\n    this.loadChildren();\n  }\n  private set Alien (value) {\n    this.alien = value;\n    this.propKeys = Object.keys(value);\n  }\n  loadCurrentAlien() {\n    let navData = this.router.getCurrentNavigation() && this.router.getCurrentNavigation().extras; \n    if (navData && navData.state && navData.state.data) {\n      this.Alien = navData.state.data;\n    } else {\n      this.alienService.getBy('id', this.id).subscribe(alien => {\n       this.Alien = alien;\n      })\n    }\n   }\n   loadChildren() {\n    this.alienService.getBy('parent', this.id).subscribe(children => {\n      if(children && children['length'] > 0) {\n        this.children = children;\n      }\n      console.log(this.children);\n    })\n  }\n  getColumns(type) {\n    type = type.toLowerCase();\n      let colType = type === \"commander\" ? \"warrior\" : \"commander\";\n      return this.alienService.getListColumns(colType);\n    }\n  ngOnInit(): void {\n  }\n\n}\n","<section *ngIf=\"alien\" class=\"portal\">\n    <h2 class=\" mb-5 text-center\"> Magnifying glass for alien {{ alien.name }} </h2>\n    <br>\n    <p *ngFor=\"let prop of propKeys\">\n        {{ prop | custom_titlecase }}: {{ alien[prop] }}\n    </p>\n    <alien-list l-title=\"Servants of {{alien.name}}\" \n    *ngIf=\"children; else noChildren\" [columns]=\"getColumns(alien.type)\" [items]=\"children\">\n    </alien-list>\n    <ng-template #noChildren>\n        <span style=\"font-weight: bold;\"> This alien does not have any servants.\n        </span>\n    </ng-template>\n    <br>\n    <button routerLink=\"/members/dashboard\" class=\"button--icon\"> &#x2190;  </button>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n  constructor(private router: Router, private route: ActivatedRoute, private userService: UserService) { }\n  authenticate() {\n      this.userService.loginWithGoogle().then(() => {\n        this.router.navigate(['members'], { relativeTo: this.route })\n      })\n  }\n  ngOnInit(): void {\n  }\n\n}\n","\n        <h2 class=\"auth__authentication__title\">\n            Identify yourself, soldier\n        </h2>\n        <br>\n        <button (click)=\"authenticate()\" class=\"button\"> Authenticate </button>","import { Component, OnInit } from '@angular/core';\nimport { AlienService } from 'src/app/services/alien.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-alien',\n  templateUrl: './create-alien.component.html',\n  styleUrls: ['./create-alien.component.scss']\n})\nexport class CreateAlienComponent implements OnInit {\n  \n  //weapons, vehicles, cards & types are hardcoded per project specifications, though for a more maintainable \n  //project they would be prime candidates to be grabbed as schema from a database.\n  weapons = ['Water gun', 'Pepper spray', 'Chopsticks'];\n  membership_cards = ['Shufersal', 'Hever', 'Hitech zone'];\n  vehicles = ['Bird scooter', 'Merkava tank'];\n  alienTypes = ['Warrior', 'Commander', 'Commander Chief'];\n  parentDictionary = {\n    \"Warrior\": 'Commander',\n    \"Commander\": 'Commander Chief',\n    \"Commander Chief\": null\n  }\n  //Default value - this property is two-way bound to the form \"type\" property, and will alter the form based on its' state.\n  type = \"Warrior\";\n  aliens: any;\n  public set Type(value) {\n    console.log(this.type);\n    this.type = value;\n  }\n  constructor(private alienService: AlienService, private router: Router) {\n    alienService.getAliens().subscribe(res => {\n      this.aliens = res;\n    })\n  }\n  getParent(type) {\n    return this.parentDictionary[type];\n  }\n\n  create (alien) {\n    this.alienService.createAlien(alien).subscribe(result => {\n      this.router.navigate([\"members\", \"dashboard\"]);\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"form__wrapper\">\n    <h2 class=\"form__heading\">\n        Create Alien\n    </h2>\n    <p class=\"form__p\">\n        Use the form interface to generate additional aliens. <br>The alien type being the most important property - as\n        it alters\n        the other properties of the form.\n    </p>\n    <form #f=\"ngForm\" class=\"form\" (ngSubmit)=\"create(f.value)\">\n        <div class=\"row\">\n            <div class=\"col-md-5\">\n                <mat-form-field class=\"form__field\">\n                    <mat-label>Name</mat-label>\n                    <input required matInput ngModel name=\"name\" placeholder=\"Ex. Plutonius Maximus\">\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <mat-label>Alien Type</mat-label>\n                    <mat-select required [(ngModel)]=\"type\" name=\"type\">\n                        <mat-option *ngFor=\"let a of alienTypes\" [value]=\"a\">\n                            {{ a | titlecase }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row\" *ngIf=\"f.value.type === 'Commander'\">\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <mat-label>Vehicle</mat-label>\n                    <mat-select required ngModel name=\"vehicle\">\n                        <mat-option *ngFor=\"let v of vehicles\" [value]=\"v\">\n                            {{ v | titlecase }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row\" *ngIf=\"f.value.type === 'Warrior'\">\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <mat-label>Weapon</mat-label>\n                    <mat-select required ngModel name=\"weapon\">\n                        <mat-option *ngFor=\"let w of weapons\" [value]=\"w\">\n                            {{ w | titlecase }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row\" *ngIf=\"f.value.type === 'Commander Chief'\">\n            <div class=\"col-md-5\">\n                <mat-form-field>\n                    <mat-label>Vehicle</mat-label>\n                    <mat-select required ngModel name=\"vehicle\">\n                        <mat-option *ngFor=\"let v of vehicles\" [value]=\"v\">\n                            {{ v | titlecase }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <mat-label>Membership Card</mat-label>\n                    <mat-select required ngModel name=\"membership_card\">\n                        <mat-option *ngFor=\"let mc of membership_cards\" [value]=\"mc\">\n                            {{ mc | titlecase }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row\" *ngIf=\"aliens && f.value.type !== 'Commander Chief'\">\n            <div class=\"col-md-5\">\n                <mat-form-field>\n                    <mat-label>Serves Under</mat-label>\n                    <mat-select required ngModel name=\"parent\">\n                        <mat-option *ngFor=\"let a of aliens[getParent(f.value.type)]\" [value]=\"a._id\">\n                            {{ a.name | titlecase }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"text-center mt-5\">\n            <button [disabled]=\"f.invalid\" class=\"button button--primary\">Create</button>\n        </div>\n    </form>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"home\">\n    <h1 class=\"home__heading heading-primary heading-primary--main\">\n        Alien Invasion\n    </h1>\n    <div class=\"home__img__wrapper\">\n        <img class=\"home__img\" src=\"../../../assets/alien-dude.png\" alt=\"\" srcset=\"\">\n    </div>\n\n    <p class=\"home__p\"> PS: All images in this project have been ruthlessly stolen from google images.</p>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-readme',\n  templateUrl: './readme.component.html',\n  styleUrls: ['./readme.component.scss']\n})\nexport class ReadmeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"readme\">\n\n    <h2 class=\"heading-secondary\">\n        readme\n    </h2>\n    <p>\n        Welcome to the official readme for the ALIEN INVASION project!\n    </p>\n    <p>\n        This project was created by Oren Carmel as an Avantis job appliance home assignment.\n    </p>\n    <p><b>\n            Run Instructions:\n        </b></p>\n    <p>\n        Start the server: npm start\n    </p>\n    <p>\n        Build the project:\n        frontend dist; ng serve\n        followed by npm build.\n    </p>\n    <br>\n    <h3>Front End</h3>\n    <p>\n        Front end contained within the alien-invasion-fe (frontend) folder. Traditional Angular folder structure;\n    </p>\n    <p>\n        src/app/guards for routing guards (functions that will trigger on specified routing events)\n    </p>\n    <p>\n        src/app/pages for page specific components\n    </p>\n    <p>\n        src/app/layout for general layout wrappers.\n    </p>\n    <p>\n        src/app/services; classes acting as state managers, transfering data, handling logic and API requests.\n    </p>\n    <p>\n        src/app/app.component; project root.\n    </p>\n    <br>\n    <h3>Back End</h3>\n    <p>\n        /bootstrap; all files first loaded on server start. contains integral dependencies such as express, database connection, API configuration etc.\n    </p>\n    <p>\n        /controllers: API application logic. contains routes and business methods, mostly fetching & creating data.\n    </p>\n    <p>\n        /db: Data access layer. partially redundant when using Mongo but a good habit in my honest opinion. \n    </p>\n    <p>\n        /models: Data models & schemas describing the structure of the application.\n    </p>\n    <p>\n        /scripts: Single use scripts for specified use-cases such as clearing & populating tables.\n    </p>\n    <h3>API</h3>\n    <p><b>Routes:</b></p>\n    <p>\n        /api/aliens: POST -- create an alien\n    </p>\n    <p>\n        /api/aliens: GET - get all aliens - returns a hashmap of arrays, with the keys being alien type.\n    </p>\n    <p>\n        /api/aliens/:param?param=[param] - Get aliens by a param specified in query (defaults to ID).\n        Accepts: type, parent, id.\n    </p>\n\n    <h3>Known issues:</h3>\n    <p>\n        Due to time limitations, some elements had to be 'skimmed':\n    </p>\n    <p>\n        Google authentication is limited to until page refresh. User will have to re-authenticate on refresh. <br>\n        Unfortunately, did not have enough time to implement token validation expiration, refresh, etc.\n    </p>\n    <p>\n        Authentication is not currently validated on server side. With firebase being our authentication platform,\n        we would have to install a Firebase admin API for auth validation.\n    </p>\n    <p>\n        Lack of input validation. Given more time, to scale this app further we would need to validate fields before inserting them to the database.\n        <br> That could be achieved using Joi, another library or implementing custom field validation.\n    </p>\n</section>","import { Pipe, PipeTransform } from '@angular/core';\n/**\n * Angular has a custom built in titlecase but I'm not a fan of the implementation - we'll make a new 'custom' titlecase pipe.\n */\n@Pipe({\n  name: 'custom_titlecase'\n})\nexport class TitlecasePipe implements PipeTransform {\n  prepositions = [\n    'of', 'the', 'is', 'on', 'in', 'at', 'for'\n  ]\n  transform(value: any): any {\n    if (!value) return null;\n    if (typeof value != 'string') return value;\n    value = value.replace(/_/g, ' ').replace(/-/g, ' ');\n    let words = value.split(' ');\n    return words.map((word, i) => {\n      if (i > 0 && this.isPreposition(word)) {\n        return word.toLowerCase();\n      }\n      return this.toTitleCase(word);\n    }).join(' ');\n  }\n  toTitleCase(word: string): string {\n    return word.substr(0, 1).toUpperCase() + word.substr(1).toLowerCase();\n  }\n  isPreposition(word: string) {\n    return this.prepositions.includes(word.toLowerCase());\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlienService {\n  columns = {\n    \"chief commander\": ['name', 'vehicle', 'membership_card'],\n    \"warrior\": ['name', 'weapon'],\n    \"commander\": ['name', 'vehicle'],\n  }\n\n  url = `${ environment.base_url }/aliens`\n  constructor(private http: HttpClient) { }\n  createAlien (alien) {\n    return this.http.post(this.url, alien);\n  }\n  getAliens() {\n    return this.http.get(this.url);\n  }\n  getBy(param, value) {\n    return this.http.get(`${this.url}/${value}?param=${param}`);\n  }\n  getListColumns(type) {\n    console.log(type);\n    return this.columns[type.toLowerCase()];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { auth } from 'firebase';\nimport { map } from 'rxjs/operators';\n/**\n * For smaller apps, I prefer to use Firebase to handle\n * authentication and token validation for me. \n * This way, we can delegate responsibility of \n * token management and easily implement social \n * signups on client side, no fuss.\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private userProfile;\n  private user$;\n  constructor(private fAuth: AngularFireAuth) {\n    this.user$ = this.fAuth.user;\n    this.fAuth.onAuthStateChanged(observer => {\n      if (!observer) {\n        this.user$ = null;\n        return;\n      }\n      this.userProfile = {\n        name: observer.displayName,\n        email: observer.email\n      }\n      this.user$ = observer;\n    });\n  }\n  public async loginWithGoogle() {\n    let provider = new auth.GoogleAuthProvider();\n    let result = await this.fAuth.signInWithPopup(provider);\n  }\n  getUser() {\n    return this.fAuth.currentUser;\n  }\n\n  get Profile() {\n    return this.userProfile;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.scss']\n})\nexport class NavMenuComponent implements OnInit {\n  routes = [\n    {\n      path: \"/members/create\",\n      text: \"Create Aliens\"\n    },\n    {\n      path: \"/members/dashboard\",\n      text: \"Alien Dashboard\"\n    },\n    {\n      path: \"/members/readme\",\n      text: \"Readme\"\n    }\n  ]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav>\n    <ul>\n        <li class=\"route__item\" *ngFor=\"let route of routes\">\n            <a class=\"route\" routerLinkActive=\"route--active\" [routerLink]=\"route.path\">\n                {{ route.text }}\n            </a>\n        </li>\n    </ul>\n</nav>","export const environment = {\n  production: false,\n  base_url: \"http://localhost:3001/api\",\n  firebase: {\n    apiKey: \"AIzaSyAAfFFVC5_T89uXYmlo_GYZDBrDf6PEmgE\",\n    authDomain: \"avantis-aliens-1582893866161.firebaseapp.com\",\n    databaseURL: \"https://avantis-aliens-1582893866161.firebaseio.com\",\n    projectId: \"avantis-aliens-1582893866161\",\n    storageBucket: \"avantis-aliens-1582893866161.appspot.com\",\n    messagingSenderId: \"1081614218287\",\n    appId: \"1:1081614218287:web:3728194a1ee9a18bd082da\"\n  },\n  google_id: '1081614218287-1asqnjvluj92j4r9r07anfkbngip4sb9.apps.googleusercontent.com'\n};\nimport 'zone.js/dist/zone-error';\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}